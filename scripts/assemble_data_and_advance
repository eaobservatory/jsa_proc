#!/usr/bin/env python2

# Copyright (C) 2014 Science and Technology Facilities Council.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import logging
import argparse

from jsa_proc.job_run.scripts import fetch

description = """
Script which looks at a jsa processing job in the queued state,
assembles the data for it, and then advances the job to the waiting state.

If the --job_id command line argument is not used, this will run on
the highest priority job labelled to be reduced at the JAC and in the
state 'MISSING'.  """


# Handle arguments
parser = argparse.ArgumentParser(description=description)
parser.add_argument(
    '-j', '--job_id', type=int, required=False, default=None,
    help='Integer identifying the job in the JSA Job processing database')
parser.add_argument(
    '-v', '--verbose', required=False, default=False,
    action='store_true',
    help='Use DEBUG level of logging (otherwise uses INFO)')
args = parser.parse_args()

# Set up the logger
logging.basicConfig(level=logging.DEBUG if args.verbose else logging.INFO)

# Fetch the data.
fetch(job_id=args.job_id)
