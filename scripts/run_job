#!/usr/bin/env python2

# Copyright (C) 2014 Science and Technology Facilities Council.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import argparse
import logging

from jsa_proc.job_run.scripts import run_job

description = """
Script which runs a jsa_processing job locally, and marks the state
appropriately. If the commandline argument --job_id is not given, it
will run the highest priority job marked to be performed at the JAC
and already in the state 'WAITING'
"""

# Handle arguments.
parser = argparse.ArgumentParser(description=description)
parser.add_argument(
    '-j', '--job_id', type=int, required=False, default=None,
    help='Integer identifying the job in the JSA Job processing database')
parser.add_argument(
    '-v', '--verbose', required=False, default=False, action='store_true',
    help='Use DEBUG level of logging (otherwise use INFO)')
args = parser.parse_args()

# Set up logger.
logging.basicConfig(level=logging.DEBUG if args.verbose else logging.INFO)

# Run job.
run_job(job_id=args.job_id)
